
#include <iostream>
#include <stack>
using namespace std;

// 알고리즘
// 1. 레이저인지 판별한다.
// 2. 레이저이면 스택의 사이즈만큼 카운트 증가.
// 3. 레이저가 아니면 여는괄호인지 닫는 괄호인지를 파악하여 스택에 push() or pop()
// 4. 스택의 pop()의 경우 카운트 1 증가.
int piece(string input) {
    stack<int> s;
    int len = input.length();
    char c, c2;
    int i, cnt = 0;
    for (i = 0; i < len; i++) {       // input의 길이만큼 반복문 시작
        c = input[i];                 // 레이저를 확인하기 위해
        c2 = input[i + 1];            // 변수 두개를 비교하여 레이저를 찾기
        if (c == '(' && c2 == ')') {  // 레이저인 경우
            i++;                      // i값을 증가시켜 다음 i+1의 경우를 건너뛰게 한다.
            cnt += s.size();          // 스택의 사이즈만큼 카운트 증가
            continue;                 // 레이저를 찾았으므로 continue;
        }
        if (c == '(')  // 여는 괄호만 있는 경우 스택에 push()
            s.push(c);
        else if (c == ')' && !s.empty()) {  // 닫는 괄호이며 스택이 비어있지 않으면 pop()
            s.pop();
            cnt++;
        }
    }

    return cnt;
}

int main() {
    string input;  // 괄호를 받아올 변수
    cin >> input;  // 괄호를 입력
    // 입력된 괄호에서 잘려진 조각의 총 개수를 구하는 함수
    cout << piece(input);
}
